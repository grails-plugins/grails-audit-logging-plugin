buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    }
}

plugins {
  id "com.bertramlabs.asset-pipeline" version "$assetPipelineVersion"
}

version project.projectVersion
group "audit.test"

apply plugin: "war"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeOnlyClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "org.springframework.boot:spring-boot-starter-logging"
    compileOnly "org.springframework.boot:spring-boot-autoconfigure"
    compileOnly "org.grails:grails-core"
    compileOnly "org.springframework.boot:spring-boot-starter-actuator"
    compileOnly "org.springframework.boot:spring-boot-starter-tomcat"
    compileOnly "org.grails:grails-web-boot"
    compileOnly "org.grails:grails-logging"
    compileOnly "org.grails:grails-plugin-rest"
    compileOnly "org.grails:grails-plugin-databinding"
    compileOnly "org.grails:grails-plugin-i18n"
    compileOnly "org.grails:grails-plugin-services"
    compileOnly "org.grails:grails-plugin-url-mappings"
    compileOnly "org.grails:grails-plugin-interceptors"
    compileOnly "org.grails.plugins:cache"
    compileOnly "org.grails.plugins:async"
    compileOnly "org.grails.plugins:scaffolding"
    compileOnly "org.grails.plugins:events"
    compileOnly "org.grails.plugins:hibernate5"
    compileOnly "org.grails.plugins:gsp"
    implementation project(":audit-logging")
    implementation "org.apache.groovy:groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails"
    testCompileOnly "org.grails:grails-gorm-testing-support"
    testCompileOnly "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

tasks.withType(Test).configureEach { Task it ->
    useJUnitPlatform()

    if (it.name == 'test') {
        it.testLogging {
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
}