import java.text.SimpleDateFormat

static String buildDate() {
  def df = new SimpleDateFormat("yyyy-MM-dd")
  df.setTimeZone(TimeZone.getTimeZone("UTC"))
  return df.format(new Date())
}

asciidoctor {
  logDocuments true
  baseDirFollowsSourceDir()

  sourceDir = file('src/docs')
  sources {
    include 'index.adoc'
  }

  outputDir new File(buildDir, 'docs')

  outputOptions {
    backends = ['html5', 'pdf', 'epub3']
    separateOutputDirs = false
  }

  attributes 'experimental': 'true',
    'source-highlighter': 'coderay',
    'compat-mode': 'true',
    toc: 'left',
    icons: 'font',
    setanchors: 'true',
    idprefix: '',
    idseparator: '-',
    toc2: '',
    numbered: '',
    version: project.version,
    groupId: project.group,
    artifactId: project.name,
    revnumber: project.version,
    revdate: buildDate()
}

task docs(dependsOn: 'asciidoctor') {
  doLast {
    File dir = new File(buildDir, 'docs')
    dir.mkdirs()

    ['pdf', 'epub'].each { String ext ->
      File f = new File(dir, 'index.' + ext)
      if (f.exists()) {
        f.renameTo new File(dir, project.name + '-' + project.version + '.' + ext)
      }
    }

    new File(buildDir, 'docs/ghpages.html') << file('src/docs/templates/index.tmpl').text.replaceAll("@VERSION@", project.version).replaceAll("@DOCDATE@", buildDate())

    copy {
      from 'src/docs'
      into new File(buildDir, 'docs').path
      include '**/*.png'
    }
  }
}
